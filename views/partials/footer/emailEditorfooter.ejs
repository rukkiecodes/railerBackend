<!-- Import vue and vue material designs -->
<script src="/script/vue.js"></script>
<script src="/script/vuetify.js"></script>
<script src="/script/vuesax.min.js"></script>

<!-- import grapesjs -->
<script src="/script/grapes.min.js"></script>

<!-- import reload -->
<script src="/reload/reload.js"></script>

<script>
  new Vue({
    el: '#emailEditor',
    data: {
      drawer: true,
      routes: [{
          title: 'Template',
          icon: 'mdi-view-dashboard-outline',
          to: '/',
          location: window.location.pathname
        },
        {
          title: 'Copy',
          icon: 'mdi-content-copy',
          to: '/copy',
          location: window.location.pathname
        },
        {
          title: 'Email editor',
          icon: 'mdi-view-dashboard-variant-outline',
          to: '/emailEditor',
          location: window.location.pathname
        },
        {
          title: 'Compose template',
          icon: 'mdi-code-json',
          to: '/codeEditor',
          location: window.location.pathname
        },
      ],
      menu: false,
      search: "",
      emailEditorWidth: null,
      emailEditorHeight: null,
    },
    mounted() {
      const drawerBorder = document.querySelector(".v-navigation-drawer__border")
      if (drawerBorder) {
        drawerBorder.style.display = 'none'
      }
      const vsSwitch = document.querySelector(".vs-switch")
      if (vsSwitch) {
        vsSwitch.style.background = "#121212"
      }

      const emailEditorContainer = document.querySelector("#gjs")
      if (emailEditorContainer) {
        const emailEditorContainerSheet = document.querySelector(".emailEditorContainerSheet")
        this.emailEditorWidth = emailEditorContainerSheet.offsetWidth
        this.emailEditorHeight = emailEditorContainerSheet.offsetHeight

        const editor = grapesjs.init({
          container: "#gjs",
          
          width: this.emailEditorWidth,
          height: this.emailEditorHeight,
        });
      }
    },

    computed: {
      drawerMiniVariant() {
        switch (this.$vuetify.breakpoint.name) {
          case 'xs':
            return false
          case 'sm':
            return false
          case 'md':
            return false
          case 'lg':
            return true
          case 'xl':
            return true
        }
      },
    },
    vuetify: new Vuetify({
      theme: {
        dark: true
      },
    }),
  })
</script>
</body>

</html>